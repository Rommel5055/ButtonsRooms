package cl.webcursos.salas.client;

import java.util.ArrayList;
import java.util.List;

import com.google.gwt.core.client.EntryPoint;
import com.google.gwt.event.dom.client.ClickEvent;
import com.google.gwt.event.dom.client.ClickHandler;
import com.google.gwt.user.client.Window;
import com.google.gwt.user.client.ui.Button;

import com.google.gwt.user.client.ui.DecoratorPanel;
import com.google.gwt.user.client.ui.FormPanel;
import com.google.gwt.user.client.ui.FormPanel.SubmitCompleteEvent;
import com.google.gwt.user.client.ui.FormPanel.SubmitEvent;
import com.google.gwt.user.client.ui.HTML;
import com.google.gwt.user.client.ui.HorizontalPanel;
import com.google.gwt.user.client.ui.Label;
import com.google.gwt.user.client.ui.RootPanel;
import com.google.gwt.user.client.ui.TextBox;
import com.google.gwt.user.client.ui.ToggleButton;
import com.google.gwt.user.client.ui.VerticalPanel;


public class Salas implements EntryPoint {

	public String mensaje = "";

	
	public void onModuleLoad() {
		 
	
		final VerticalPanel vPanel = new VerticalPanel();
		vPanel.setSpacing(5); 

		int buttons [][][] = {//traigo arreglo con toda la información de las reservas
				{{16,1,1,101,0},
				{16,2,0,101,0},
				{16,3,0,101,0},
				{16,4,0,101,0}},
					{{17,1,0,102,0},
					{17,2,1,102,0},
					{17,3,0,102,0},
					{17,4,0,102,0}},
						{{18,1,1,103,0},
						{18,2,0,103,0},
						{18,3,0,103,0},
						{18,4,0,103,0}}
		};

		final int capSobre= 0;//traigo si puede sobre escribir
		final int maxreservasenpantalla = 2;//traigo cantidad de reservas en el dia


	       
		

		for (int i = 0; i < buttons.length; i++) {  
			HorizontalPanel hPanel = new HorizontalPanel();
			hPanel.setSpacing(4);
			HorizontalPanel hModulosPanel = new HorizontalPanel();
			hModulosPanel.setSpacing(4);
			
			// esquina de las salas
			
		    HTML html = new HTML("<div style='hight: 10px; width: 53px;'></div>",true);
			
			//ToggleButton tB = new ToggleButton();
			//tB.setEnabled(false);
			//tB.setStylePrimaryName("Boton-marco");
			//hModulosPanel.add(tB);
			
			hModulosPanel.add(html);

			for (int j = 0; j < buttons[i].length; j++) { 
				if(i==0){
					
					int modulos= buttons[i][j][1];
					ToggleButton toggleButton = new ToggleButton(Integer.toString(modulos));
					toggleButton.setEnabled(false);
					toggleButton.setStylePrimaryName("Boton-marco");
					hModulosPanel.add(toggleButton);

				}

				if(j==0){
					// agrega el número de la sala, por ejemplo: 101
					int name= buttons[i][j][3];
					ToggleButton botoncito = new ToggleButton(Integer.toString(name));
					botoncito.setEnabled(false);
					botoncito.setStylePrimaryName("Boton-marco");
					hPanel.add(botoncito);
				}

				final int estado= buttons [i][j][2];
				final SalasButton boton = new SalasButton(
						buttons[i][j][3], // Sala
						buttons[i][j][1], // Módulo
						estado ==1,//si esta reservada
						capSobre == 1,// Si se puede sobreescribir
						"",
						"",
						new ClickHandler() {

							public void onClick(ClickEvent event) {

							 SalasButton btn = (SalasButton) event.getSource();

								if(btn.isDown()){
									if(maxreservasenpantalla!=0){
										for(SalasButton bt : getHermanosVerticales(btn)) {
											bt.setDown(false);
										}
										if(cuantosApretados(btn) > maxreservasenpantalla) {
											btn.setDown(false);
											Window.alert("No puedes seleccionar más de "+maxreservasenpantalla+" módulos en un día.");
											return;
										}
									}

								}else{
									
									Window.alert("Deseleccionado");

									
								}
							


							}
						});

				hPanel.add(boton);
			}
			if(i==0){
				vPanel.add(hModulosPanel);
			}

			vPanel.add(hPanel);

		}


		final FormPanel form = new FormPanel();
		form.setAction("");

		// Because we're going to add a FileUpload widget, 
		// we'll need to set the form to use the POST method, 
		// and multipart MIME encoding.
		form.setEncoding(FormPanel.ENCODING_MULTIPART);
		form.setMethod(FormPanel.METHOD_POST);

		// Create a panel to hold all of the form widgets.
		VerticalPanel panel = new VerticalPanel();
		panel.setSpacing(4);
		form.setWidget(panel);

		final TextBox nombreEvento = new TextBox();	

		final TextBox asistentes = new TextBox();

		final  TextBox correo = new TextBox();

		final String nombreEventoTxt = "Nombre del evento";
		nombreEvento.setValue(nombreEventoTxt);
		nombreEvento.setStylePrimaryName("Text-Box");
		nombreEvento.addClickHandler(new ClickHandler() {
			@Override
			public void onClick(ClickEvent event) {
				nombreEvento.setValue(null); 

				if(asistentes.getValue().length()== 0){

					asistentes.setValue("Asistentes");
				}
				if(correo.getValue().length()== 0){
					correo.setValue("Correo electrónico");

				}

			}
		});
		final String asistentesTxt="Asistentes";
		asistentes.setValue(asistentesTxt);
		asistentes.setStylePrimaryName("Text-Box");
		asistentes.addClickHandler(new ClickHandler() {
			@Override
			public void onClick(ClickEvent event) {
				asistentes.setValue(null);   
				
				if(nombreEvento.getValue().length()== 0 ){
					nombreEvento.setValue("Nombre del evento");

				}
				if(correo.getValue().length()== 0){
					correo.setValue("Correo electrónico");

				}
			}
		});
		final String correoTxt="Correo electrónico";
		correo.setValue(correoTxt);
		correo.setStylePrimaryName("Text-Box");
		correo.addClickHandler(new ClickHandler() {
			@Override
			public void onClick(ClickEvent event) {
				correo.setValue(null);   
				
				if(asistentes.getValue().length()== 0){

					asistentes.setValue("Asistentes");
				}
				if(nombreEvento.getValue().length()== 0){
					nombreEvento.setValue("Nombre del evento");

				}
			}
		});

		panel.add(nombreEvento);
		panel.add(asistentes);
		panel.add(correo);
		// Add a 'submit' button.
		panel.add(new Button("Submit", new ClickHandler() {
			@Override
			public void onClick(ClickEvent event) {
				form.submit();					
			}
		}));

		// Add an event handler to the form.
		form.addSubmitHandler(new FormPanel.SubmitHandler() {
			@Override
			public void onSubmit(SubmitEvent event) {
				// This event is fired just before the form is submitted. 
				// We can take this opportunity to perform validation.

				if (nombreEvento.getText().length() == 0 || nombreEvento.getText().equals(nombreEventoTxt)) {
					Window.alert("Debe escribir un  nombre de evento.");
					nombreEvento.setStylePrimaryName("Text-Box-vacio");
					nombreEvento.setValue("Nombre del evento");

					event.cancel();
				}else{
					nombreEvento.setStylePrimaryName("Text-Box");
					
				}	
				if (asistentes.getText().length() == 0 || asistentes.getText().equals(asistentesTxt)) {
					Window.alert("Debe escribir la cantidad de asistentes.");
					asistentes.setStylePrimaryName("Text-Box-vacio");
					asistentes.setValue("Asistentes");

					event.cancel();
				}	else{
					asistentes.setStylePrimaryName("Text-Box");
				

				}
				
				if (correo.getText().length() == 0 || correo.getText().equals(correoTxt)) {
					Window.alert("Debe escribir el correo de usuario.");
					
					correo.setStylePrimaryName("Text-Box-vacio");
					correo.setValue("Correo electrónico");

					event.cancel();
				}	else{
					correo.setStylePrimaryName("Text-Box");
				
				}	
			}
		});

		form.addSubmitCompleteHandler(new FormPanel.SubmitCompleteHandler() {
			@Override
			public void onSubmitComplete(SubmitCompleteEvent event) {
				if(getApretados(vPanel).size()<=maxreservasenpantalla){
					
					String salamodulo = getApretados(vPanel).get(0);
					String[] salamodulolist = salamodulo.split(".");
			
					mensaje = "Estimado "+nombreEvento.getValue()+" a contuniación le mostramos la información de su reserva "
							+ "Asistentes: "+asistentes.getValue()+" Sala: Modulo: "
						    + " Le enviamos un mail con dicha información a "+correo.getValue();
					
					RootPanel.get("salas").clear();
					RootPanel.get("salas").add(new Label(mensaje));
                    System.out.println(getApretados(vPanel));
					System.out.println(salamodulo);
					System.out.println(salamodulolist.length);
				}
			}
		});

		DecoratorPanel decoratorPanel = new DecoratorPanel();
		decoratorPanel.add(form);


		RootPanel.get("salas").add(vPanel);
		RootPanel.get("salas").add(decoratorPanel);
	}

	private List<SalasButton> getHermanos(SalasButton btn) {

		List<SalasButton> hermanos = new ArrayList<SalasButton>();

		VerticalPanel vpanel = (VerticalPanel) btn.getParent().getParent();
		for(int i=0; i < vpanel.getWidgetCount(); i++) {
			HorizontalPanel hpanel = (HorizontalPanel) vpanel.getWidget(i);
			for(int j=0; j < hpanel.getWidgetCount(); j++) {
				if(!(hpanel.getWidget(j) instanceof SalasButton))
					continue;
				SalasButton bt = (SalasButton) hpanel.getWidget(j);
				if(bt != btn)
					hermanos.add(bt);
			}
		}

		return hermanos;
	}

	private List<SalasButton> getHermanosVerticales(SalasButton btn) {

		List<SalasButton> hermanos = new ArrayList<SalasButton>();

		VerticalPanel vpanel = (VerticalPanel) btn.getParent().getParent();
		for(int i=0; i < vpanel.getWidgetCount(); i++) {
			HorizontalPanel hpanel = (HorizontalPanel) vpanel.getWidget(i);
			for(int j=0; j < hpanel.getWidgetCount(); j++) {
				if(!(hpanel.getWidget(j) instanceof SalasButton))
					continue;
				SalasButton bt = (SalasButton) hpanel.getWidget(j);
				if(bt != btn && bt.getModulo() == btn.getModulo())
					hermanos.add(bt);
			}
		}

		return hermanos;
	}
	private List<String> getApretados(VerticalPanel vPanel) {

		List<String> hermanos = new ArrayList<String>();
		for(int i=0; i < vPanel.getWidgetCount(); i++) {
			HorizontalPanel hpanel = (HorizontalPanel) vPanel.getWidget(i);
			for(int j=0; j < hpanel.getWidgetCount(); j++) {
				if(!(hpanel.getWidget(j) instanceof SalasButton))
					continue;
				SalasButton bt = (SalasButton) hpanel.getWidget(j);
				if(bt.isDown()){
					
					String apretados = bt.getModulo()+"."+bt.getSala();
					hermanos.add(apretados);
				}
				
			}
		}
		
		return hermanos;
	}
	private int cuantosApretados(SalasButton btn) {
		int total = 0;
		if(btn.isDown())
			total++;
		for(SalasButton bt : getHermanos(btn)) {
			if(bt.isDown())
				total++;
		}
		return total;
		
		
	}
	

}
